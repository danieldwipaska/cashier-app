// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid()) // @default(autoincrement())
  username   String   @unique
  password   String
  role       String   @default("admin")
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  shop       Shop     @relation(fields: [shopId], references: [id])
  shopId     String
}

model Shop {
  id                   String   @id @default(uuid()) // @default(autoincrement())
  code                 String   @unique
  name                 String
  discount_status      Boolean  @default(false)
  discount             Int      @default(0)
  discount_unit        String   @default("percent")
  tax                  Int      @default(0)
  tax_status           Boolean  @default(false)
  service              Int      @default(0)
  service_status       Boolean  @default(false)
  included_tax_service Boolean  @default(true)
  created_at           DateTime @default(now())
  updated_at           DateTime @default(now()) @updatedAt
  User                 User[]
  Crew                 Crew[]
}

model Category {
  id         String   @id @default(uuid())
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  //author    User?    @relation(fields: [authorId], references: [id])
  //authorId   Int?

  Fnbs Fnbs[]
}

model Fnbs {
  id               String   @id @default(uuid())
  name             String   @unique
  price            Int
  availability     Boolean  @default(true)
  discount_status  Boolean  @default(false)
  discount_percent Int      @default(0)
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now()) @updatedAt
  category         Category @relation(fields: [categoryId], references: [id])
  categoryId       String
}

model Report {
  id                              String    @id @default(uuid())
  type                            String
  status                          String    @default("paid")
  customer_name                   String
  customer_id                     String    @default("")
  card_number                     String    @default("")
  served_by                       String
  crew_id                         String    @default("")
  collected_by                    String    @default("Greeter")
  initial_balance                 Int       @default(0)
  final_balance                   Int       @default(0)
  total_payment                   Float
  tax_service_included            Boolean   @default(false)
  total_payment_after_tax_service Float     @default(0)
  tax_percent                     Float     @default(0)
  service_percent                 Float     @default(0)
  total_tax_service               Float     @default(0)
  payment_method                  String    @default("")
  note                            String    @default("")
  order_id                        String[]  @default([])
  order_name                      String[]  @default([])
  order_category                  String[]  @default([])
  order_amount                    Int[]     @default([])
  order_price                     Int[]     @default([])
  order_discount_status           Boolean[] @default([])
  order_discount_percent          Int[]     @default([])
  created_at                      DateTime  @default(now())
  updated_at                      DateTime  @default(now()) @updatedAt
}

model Card {
  id            String   @id @default(uuid())
  card_number   String   @unique
  customer_id   String   @default("")
  customer_name String   @default("")
  balance       Int      @default(0)
  status        String   @default("inactive")
  is_member     Boolean
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now()) @updatedAt
}

model Crew {
  id         String   @id @default(uuid())
  name       String   @unique
  code       String   @unique
  position   String
  shop       Shop     @relation(fields: [shopId], references: [id])
  shopId     String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
}

model Method {
  id         String   @id @default(uuid())
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
}
